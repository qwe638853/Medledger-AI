// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: myhealth/data.proto

package myhealth

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadReportRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ReportId        string                 `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	PatientHash     string                 `protobuf:"bytes,2,opt,name=patient_hash,json=patientHash,proto3" json:"patient_hash,omitempty"`
	TestResultsJson string                 `protobuf:"bytes,3,opt,name=test_results_json,json=testResultsJson,proto3" json:"test_results_json,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UploadReportRequest) Reset() {
	*x = UploadReportRequest{}
	mi := &file_myhealth_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadReportRequest) ProtoMessage() {}

func (x *UploadReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myhealth_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadReportRequest.ProtoReflect.Descriptor instead.
func (*UploadReportRequest) Descriptor() ([]byte, []int) {
	return file_myhealth_data_proto_rawDescGZIP(), []int{0}
}

func (x *UploadReportRequest) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

func (x *UploadReportRequest) GetPatientHash() string {
	if x != nil {
		return x.PatientHash
	}
	return ""
}

func (x *UploadReportRequest) GetTestResultsJson() string {
	if x != nil {
		return x.TestResultsJson
	}
	return ""
}

type UploadReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadReportResponse) Reset() {
	*x = UploadReportResponse{}
	mi := &file_myhealth_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadReportResponse) ProtoMessage() {}

func (x *UploadReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myhealth_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadReportResponse.ProtoReflect.Descriptor instead.
func (*UploadReportResponse) Descriptor() ([]byte, []int) {
	return file_myhealth_data_proto_rawDescGZIP(), []int{1}
}

func (x *UploadReportResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UploadReportResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ClaimReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReportId      string                 `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClaimReportRequest) Reset() {
	*x = ClaimReportRequest{}
	mi := &file_myhealth_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClaimReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimReportRequest) ProtoMessage() {}

func (x *ClaimReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myhealth_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimReportRequest.ProtoReflect.Descriptor instead.
func (*ClaimReportRequest) Descriptor() ([]byte, []int) {
	return file_myhealth_data_proto_rawDescGZIP(), []int{2}
}

func (x *ClaimReportRequest) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

type ClaimReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClaimReportResponse) Reset() {
	*x = ClaimReportResponse{}
	mi := &file_myhealth_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClaimReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimReportResponse) ProtoMessage() {}

func (x *ClaimReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myhealth_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimReportResponse.ProtoReflect.Descriptor instead.
func (*ClaimReportResponse) Descriptor() ([]byte, []int) {
	return file_myhealth_data_proto_rawDescGZIP(), []int{3}
}

func (x *ClaimReportResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ClaimReportResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReadReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReportId      string                 `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadReportRequest) Reset() {
	*x = ReadReportRequest{}
	mi := &file_myhealth_data_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReportRequest) ProtoMessage() {}

func (x *ReadReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myhealth_data_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReportRequest.ProtoReflect.Descriptor instead.
func (*ReadReportRequest) Descriptor() ([]byte, []int) {
	return file_myhealth_data_proto_rawDescGZIP(), []int{4}
}

func (x *ReadReportRequest) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

type ReadReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ReportContent string                 `protobuf:"bytes,2,opt,name=report_content,json=reportContent,proto3" json:"report_content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadReportResponse) Reset() {
	*x = ReadReportResponse{}
	mi := &file_myhealth_data_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReportResponse) ProtoMessage() {}

func (x *ReadReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myhealth_data_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReportResponse.ProtoReflect.Descriptor instead.
func (*ReadReportResponse) Descriptor() ([]byte, []int) {
	return file_myhealth_data_proto_rawDescGZIP(), []int{5}
}

func (x *ReadReportResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReadReportResponse) GetReportContent() string {
	if x != nil {
		return x.ReportContent
	}
	return ""
}

type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_myhealth_data_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myhealth_data_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_myhealth_data_proto_rawDescGZIP(), []int{6}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_myhealth_data_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myhealth_data_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_myhealth_data_proto_rawDescGZIP(), []int{7}
}

func (x *LoginResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LoginResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_myhealth_data_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myhealth_data_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_myhealth_data_proto_rawDescGZIP(), []int{8}
}

func (x *RegisterRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_myhealth_data_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myhealth_data_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_myhealth_data_proto_rawDescGZIP(), []int{9}
}

func (x *RegisterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_myhealth_data_proto protoreflect.FileDescriptor

const file_myhealth_data_proto_rawDesc = "" +
	"\n" +
	"\x13myhealth/data.proto\x12\bmyhealth\x1a\x1cgoogle/api/annotations.proto\"\x81\x01\n" +
	"\x13UploadReportRequest\x12\x1b\n" +
	"\treport_id\x18\x01 \x01(\tR\breportId\x12!\n" +
	"\fpatient_hash\x18\x02 \x01(\tR\vpatientHash\x12*\n" +
	"\x11test_results_json\x18\x03 \x01(\tR\x0ftestResultsJson\"J\n" +
	"\x14UploadReportResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"1\n" +
	"\x12ClaimReportRequest\x12\x1b\n" +
	"\treport_id\x18\x01 \x01(\tR\breportId\"I\n" +
	"\x13ClaimReportResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"0\n" +
	"\x11ReadReportRequest\x12\x1b\n" +
	"\treport_id\x18\x01 \x01(\tR\breportId\"U\n" +
	"\x12ReadReportResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x0ereport_content\x18\x02 \x01(\tR\rreportContent\"F\n" +
	"\fLoginRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"C\n" +
	"\rLoginResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"I\n" +
	"\x0fRegisterRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"F\n" +
	"\x10RegisterResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xec\x03\n" +
	"\rHealthService\x12d\n" +
	"\fUploadReport\x12\x1d.myhealth.UploadReportRequest\x1a\x1e.myhealth.UploadReportResponse\"\x15\x82\xd3\xe4\x93\x02\x0f:\x01*\"\n" +
	"/v1/upload\x12`\n" +
	"\vClaimReport\x12\x1c.myhealth.ClaimReportRequest\x1a\x1d.myhealth.ClaimReportResponse\"\x14\x82\xd3\xe4\x93\x02\x0e:\x01*\"\t/v1/claim\x12g\n" +
	"\n" +
	"ReadReport\x12\x1b.myhealth.ReadReportRequest\x1a\x1c.myhealth.ReadReportResponse\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/v1/report/{report_id}\x12N\n" +
	"\x05Login\x12\x16.myhealth.LoginRequest\x1a\x17.myhealth.LoginResponse\"\x14\x82\xd3\xe4\x93\x02\x0e:\x01*\"\t/v1/login\x12Z\n" +
	"\bRegister\x12\x19.myhealth.RegisterRequest\x1a\x1a.myhealth.RegisterResponse\"\x17\x82\xd3\xe4\x93\x02\x11:\x01*\"\f/v1/registerB\"Z sdk_test/proto/myhealth;myhealthb\x06proto3"

var (
	file_myhealth_data_proto_rawDescOnce sync.Once
	file_myhealth_data_proto_rawDescData []byte
)

func file_myhealth_data_proto_rawDescGZIP() []byte {
	file_myhealth_data_proto_rawDescOnce.Do(func() {
		file_myhealth_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_myhealth_data_proto_rawDesc), len(file_myhealth_data_proto_rawDesc)))
	})
	return file_myhealth_data_proto_rawDescData
}

var file_myhealth_data_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_myhealth_data_proto_goTypes = []any{
	(*UploadReportRequest)(nil),  // 0: myhealth.UploadReportRequest
	(*UploadReportResponse)(nil), // 1: myhealth.UploadReportResponse
	(*ClaimReportRequest)(nil),   // 2: myhealth.ClaimReportRequest
	(*ClaimReportResponse)(nil),  // 3: myhealth.ClaimReportResponse
	(*ReadReportRequest)(nil),    // 4: myhealth.ReadReportRequest
	(*ReadReportResponse)(nil),   // 5: myhealth.ReadReportResponse
	(*LoginRequest)(nil),         // 6: myhealth.LoginRequest
	(*LoginResponse)(nil),        // 7: myhealth.LoginResponse
	(*RegisterRequest)(nil),      // 8: myhealth.RegisterRequest
	(*RegisterResponse)(nil),     // 9: myhealth.RegisterResponse
}
var file_myhealth_data_proto_depIdxs = []int32{
	0, // 0: myhealth.HealthService.UploadReport:input_type -> myhealth.UploadReportRequest
	2, // 1: myhealth.HealthService.ClaimReport:input_type -> myhealth.ClaimReportRequest
	4, // 2: myhealth.HealthService.ReadReport:input_type -> myhealth.ReadReportRequest
	6, // 3: myhealth.HealthService.Login:input_type -> myhealth.LoginRequest
	8, // 4: myhealth.HealthService.Register:input_type -> myhealth.RegisterRequest
	1, // 5: myhealth.HealthService.UploadReport:output_type -> myhealth.UploadReportResponse
	3, // 6: myhealth.HealthService.ClaimReport:output_type -> myhealth.ClaimReportResponse
	5, // 7: myhealth.HealthService.ReadReport:output_type -> myhealth.ReadReportResponse
	7, // 8: myhealth.HealthService.Login:output_type -> myhealth.LoginResponse
	9, // 9: myhealth.HealthService.Register:output_type -> myhealth.RegisterResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_myhealth_data_proto_init() }
func file_myhealth_data_proto_init() {
	if File_myhealth_data_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_myhealth_data_proto_rawDesc), len(file_myhealth_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_myhealth_data_proto_goTypes,
		DependencyIndexes: file_myhealth_data_proto_depIdxs,
		MessageInfos:      file_myhealth_data_proto_msgTypes,
	}.Build()
	File_myhealth_data_proto = out.File
	file_myhealth_data_proto_goTypes = nil
	file_myhealth_data_proto_depIdxs = nil
}
